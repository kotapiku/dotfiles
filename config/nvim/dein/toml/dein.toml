[[plugins]]
repo = 'altercation/vim-colors-solarized'

[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

# status bar
[[plugins]]
repo = 'vim-airline/vim-airline' 
depends = ['vim-airline-themes']
hook_add = '''
    let g:airline_powerline_fonts = 1
    let g:airline#extensions#tabline#enabled = 1
    set laststatus=2
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes' 
hook_add = '''
    let g:airline_theme='solarized'
    let g:airline_solarized_bg='dark'
'''

[[plugins]]
repo = 'scrooloose/nerdtree' 
depends = ['ryanoasis/vim-devicons','tiagofumo/vim-nerdtree-syntax-highlight']
hook_add = '''
    let g:NERDTreeShowHidden = 1
    let g:NERDTreeShowBookmarks=1
    autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
    autocmd StdinReadPre * let s:std_in=1
    autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons' 

[[plugins]]
repo = 'tiagofumo/vim-nerdtree-syntax-highlight' 

# comment
[[plugins]]
repo = 'tyru/caw.vim'
hook_add = '''
    nmap <Leader>c <Plug>(caw:hatpos:toggle)
    vmap <Leader>c <Plug>(caw:hatpos:toggle)
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'alpicola/vim-egison'

[[plugins]]
repo = 'neovimhaskell/haskell-vim'

[[plugins]]
repo = 'kassio/neoterm'
hook_add = '''
    " hide/close terminal
    nnoremap <silent> ,tc :call neoterm#close()<cr>
'''

[[plugins]]
repo = 'majutsushi/tagbar'
hook_add = '''
    let g:tagbar_type_haskell = {
        \ 'ctagsbin'  : 'hasktags',
        \ 'ctagsargs' : '-x -c -o-',
        \ 'kinds'     : [
            \  'm:modules:0:1',
        \  'd:data: 0:1',
        \  'd_gadt: data gadt:0:1',
        \  't:type names:0:1',
        \  'nt:new types:0:1',
        \  'c:classes:0:1',
        \  'cons:constructors:1:1',
        \  'c_gadt:constructor gadt:1:1',
        \  'c_a:constructor accessors:1:1',
        \  'ft:function types:1:1',
        \  'fi:function implementations:0:1',
        \  'o:others:0:1'
            \ ],
            \ 'sro'        : '.',
            \ 'kind2scope' : {
                \ 'm' : 'module',
                \ 'c' : 'class',
                \ 'd' : 'data',
                \ 't' : 'type'
                    \ },
            \ 'scope2kind' : {
                \ 'module' : 'm',
                \ 'class'  : 'c',
                \ 'data'   : 'd',
                \ 'type'   : 't'
                    \ }
            \ }
'''

[[plugins]]
repo = 'bitc/lushtags'

[[plugins]]
repo = 'neomake/neomake'
hook_add = '''
    autocmd! BufWritePost * Neomake
    let g:neomake_cpp_enable_markers=['gcc']
    let g:neomake_cpp_gcc_args = ["-std=c++14", "-Wall"]
    let g:neomake_cpp_gcccheck_args = ["-std=c++14", "-Wall"]
 '''
